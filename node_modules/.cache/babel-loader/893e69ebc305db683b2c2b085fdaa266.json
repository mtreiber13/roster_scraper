{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Work/roster_scraper/scraper/src/components/Form.tsx\";\nimport * as React from 'react';\nimport \"./Form.css\";\nimport TableContainer from \"./TableContainer\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      showData: false,\n      teamUrls: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.scrape = this.scrape.bind(this);\n  } // gets the team URLs from the api\n\n\n  async scrape() {\n    await fetch('http://localhost:2999/get_teams', {\n      method: 'POST',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"value\": this.state.value\n      })\n    }).then(async response => {\n      if (response.ok) {\n        await response.json().then(json => {\n          this.setState({\n            showData: true,\n            teamUrls: json.teams\n          });\n        });\n      }\n    }).catch(e => console.log(\"ERROR: \" + e));\n  } // constantly updates the value based on input\n\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  } // handles the submit button, makes call to scraper\n\n\n  async handleSubmit(event) {\n    event.persist();\n    event.preventDefault();\n    await this.scrape();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"FormData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Enter a College's Athletic URL\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Get Athlete Data\")), React.createElement(\"div\", {\n      className: \"Tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.showData ? React.createElement(TableContainer, {\n      urls: this.state.teamUrls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/admin/Desktop/Work/roster_scraper/scraper/src/components/Form.tsx"],"names":["React","TableContainer","Button","TextField","Form","Component","constructor","props","state","value","showData","teamUrls","handleChange","bind","handleSubmit","scrape","fetch","method","headers","body","JSON","stringify","then","response","ok","json","setState","teams","catch","e","console","log","event","target","persist","preventDefault","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport \"./Form.css\"\nimport TableContainer from \"./TableContainer\"\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nexport interface formState {\n\tvalue: string;\n\tshowData: boolean;\n\tteamUrls: string[];\n}\n\nexport interface scrapeResponse {\n\tdata:string[][][];\n}\n\nclass Form extends React.Component<{}, formState> {\n\tconstructor(props:any) {\n\t  \tsuper(props);\n\t  \tthis.state = {\n\t  \t\tvalue: '',\n\t  \t\tshowData: false,\n\t  \t\tteamUrls: []\n\t  \t}\n\t  \tthis.handleChange = this.handleChange.bind(this);\n\t  \tthis.handleSubmit = this.handleSubmit.bind(this);\n\t  \tthis.scrape = this.scrape.bind(this);\n\t}\n\n\t// gets the team URLs from the api\n\tasync scrape () {\n\t\tawait fetch('http://localhost:2999/get_teams', {\n  \t\t\tmethod: 'POST',\n  \t\t\theaders: {\n  \t\t\t\t'Access-Control-Allow-Origin': '*',\n  \t\t\t\t'Accept': 'application/json',\n    \t\t\t'Content-Type': 'application/json'\n  \t\t\t},\n  \t\t\tbody: JSON.stringify({\"value\": this.state.value})\n  \t\t})\n  \t\t\t.then(async (response) => {\n  \t\t\t\tif (response.ok) {\n  \t\t\t\t\tawait response.json().then(json => {\n  \t\t\t\t\t\tthis.setState({\n  \t\t\t\t\t\t\tshowData: true,\n  \t\t\t\t\t\t\tteamUrls: json.teams\n  \t\t\t\t\t\t})\n  \t\t\t\t\t})\n  \t\t\t\t}\n  \t\t\t})\n\t\t\t.catch((e) => console.log(\"ERROR: \" + e))\n\t}\n\n\t// constantly updates the value based on input\n\thandleChange(event:any) {\n\t\tthis.setState({value: event.target.value});\n\t}\n\n\t// handles the submit button, makes call to scraper\n\tasync handleSubmit(event:any) {\n\t\tevent.persist()\n\t\tevent.preventDefault();\n\t\tawait this.scrape();\n\t}\n\n\n\trender() {\t\n\t\treturn(\n\t\t\t<div className=\"FormData\">\n\t\t\t\t<div className=\"Form\">\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t        \t<TextField id=\"outlined-basic\" label=\"Enter a College's Athletic URL\" variant=\"outlined\" />\n\t\t\t        \t<br></br>\n\t\t\t      \t</form>\n\t\t\t      \t<br></br>\n\t\t\t      \t<Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\n        \t\t\t\tGet Athlete Data\n      \t\t\t\t</Button>\n\t\t\t    </div>\n\t\t\t    <div className=\"Tables\">\n\t\t\t    \t{ this.state.showData ? <TableContainer urls={this.state.teamUrls}/> : null }\n\t\t\t    </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}