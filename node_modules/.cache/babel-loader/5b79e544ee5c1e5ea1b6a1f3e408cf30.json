{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Work/roster_scraper/scraper/src/components/Table.tsx\";\nimport * as React from 'react';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      headers: this.props.input[0],\n      rows: this.props.input.splice(1)\n    };\n  }\n\n  renderTableData() {\n    return this.state.rows.map((player, index) => {\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, player.map((data, index) => {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, data);\n      }));\n    });\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.headers);\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"athletes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.renderTableHeader()), this.renderTableData())));\n  }\n\n}\n\nexport default Table; // export interface column {\n// \ttitle: string;\n//     dataIndex: string;\n//     key: string;\n//     width: number;\n// }\n// export interface row {\n// \t[key:string]: string\n// }\n// function createColumns(colNames:string[]) {\n// \tlet cols:column[] = []\n// \tfor (let i = 0; i < colNames.length; i++) {\n// \t\tlet newCol:column = {\n// \t\t\ttitle: colNames[i],\n// \t\t\tdataIndex: colNames[i],\n// \t\t\tkey: colNames[i],\n// \t\t\twidth: 100\n// \t\t}\n// \t\tcols.push(newCol)\n// \t}\n// \treturn cols;\n// }\n// function createRows(data:string[][]) {\n// \tlet colIds:string[] = data[0]\n// \tlet rows:row[] = []\n// \tfor (let i = 1; i < data.length; i++) {\n// \t\tlet newRow:row = {}\n// \t\tfor (let j = 0; j < colIds.length; j++) {\n// \t\t\tnewRow[colIds[j]] = data[i][j]\n// \t\t}\n// \t\trows.push(newRow)\n// \t}\n// \treturn rows;\n// }\n// // function createTable(data:string[][]) {\n// // \tlet cols:column[] = createColumns(data[0])\n// // \tlet rows:row[] = createRows(data)\n// // \treturn (\n// // \t\t<div className=\"Tables\">\n// // \t\t\t<Table columns={cols} data={rows} />\n// // \t\t</div>\n// // \t);\n// // }\n// module.exports = {\n// \tcreateColumns,\t\t\t\tcreateRows,\n// \tcreateTable\n// }","map":{"version":3,"sources":["/Users/admin/Desktop/Work/roster_scraper/scraper/src/components/Table.tsx"],"names":["React","Table","Component","constructor","props","state","headers","input","rows","splice","renderTableData","map","player","index","data","renderTableHeader","header","Object","keys","key","toUpperCase","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAWA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAA2D;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAmB;AAC3B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiB,CAAjB,CADG;AAEZC,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG,KAAX,CAAiBE,MAAjB,CAAwB,CAAxB;AAFM,KAAb;AAIH;;AAEDC,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKL,KAAL,CAAWG,IAAX,CAAgBG,GAAhB,CAAoB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAE3C,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCD,MAAM,CAACD,GAAP,CAAW,CAACG,IAAD,EAAOD,KAAP,KAAiB;AACvB,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,IAAL,CAAR;AACF,OAFH,CADD,CADD;AAOA,KATI,CAAP;AAUH;;AAEDC,EAAAA,iBAAiB,GAAG;AACjB,QAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKb,KAAL,CAAWC,OAAvB,CAAb;AACA,WAAOU,MAAM,CAACL,GAAP,CAAW,CAACQ,GAAD,EAAMN,KAAN,KAAgB;AAC/B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBM,GAAG,CAACC,WAAJ,EAAjB,CAAP;AACF,KAFM,CAAP;AAGF;;AAEDC,EAAAA,MAAM,GAAG;AACN,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,iBAAL,EAAL,CADH,EAEI,KAAKL,eAAL,EAFJ,CADH,CADH,CADH;AAUF;;AAzCuD;;AA4C3D,eAAeT,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import * as React from 'react';\n\ninterface tableProps {\n\tinput:string[][];\n}\n\ninterface tableState {\n\theaders:string[];\n\trows:string[][];\n}\n\nclass Table extends React.Component<tableProps,tableState> {\n\n   \tconstructor(props:tableProps) {\n      \tsuper(props) \n      \tthis.state = { \n      \t\theaders: this.props.input[0],\n      \t\trows: this.props.input.splice(1)\n      }\n   }\n\n   renderTableData() {\n      \treturn this.state.rows.map((player, index) => {\n\n         \treturn (\n\t         \t<td>{\n\t\t         \tplayer.map((data, index) => {\n\t\t               return (<tr>{data}</tr>);\n\t\t           \t})\n\t\t         }</td>\n      \t\t);\n         })\n   }\n\n   renderTableHeader() {\n      let header = Object.keys(this.state.headers)\n      return header.map((key, index) => {\n         return <th key={index}>{key.toUpperCase()}</th>\n      })\n   }\n\n   render() {\n      return (\n         <div>\n            <table id='athletes'>\n               <tbody>\n                  <tr>{this.renderTableHeader()}</tr>\n                  {this.renderTableData()}\n               </tbody>\n            </table>\n         </div>\n      )\n   }\n}\n\nexport default Table;\n\n// export interface column {\n// \ttitle: string;\n//     dataIndex: string;\n//     key: string;\n//     width: number;\n// }\n\n// export interface row {\n// \t[key:string]: string\n// }\n\n// function createColumns(colNames:string[]) {\n// \tlet cols:column[] = []\n// \tfor (let i = 0; i < colNames.length; i++) {\n// \t\tlet newCol:column = {\n// \t\t\ttitle: colNames[i],\n// \t\t\tdataIndex: colNames[i],\n// \t\t\tkey: colNames[i],\n// \t\t\twidth: 100\n// \t\t}\n// \t\tcols.push(newCol)\n// \t}\n// \treturn cols;\n// }\n\n// function createRows(data:string[][]) {\n// \tlet colIds:string[] = data[0]\n// \tlet rows:row[] = []\n// \tfor (let i = 1; i < data.length; i++) {\n// \t\tlet newRow:row = {}\n// \t\tfor (let j = 0; j < colIds.length; j++) {\n// \t\t\tnewRow[colIds[j]] = data[i][j]\n// \t\t}\n// \t\trows.push(newRow)\n// \t}\n// \treturn rows;\n// }\n\n\n// // function createTable(data:string[][]) {\n// // \tlet cols:column[] = createColumns(data[0])\n// // \tlet rows:row[] = createRows(data)\n// // \treturn (\n// // \t\t<div className=\"Tables\">\n// // \t\t\t<Table columns={cols} data={rows} />\n// // \t\t</div>\n// // \t);\n// // }\n\n// module.exports = {\n// \tcreateColumns,\t\t\t\tcreateRows,\n// \tcreateTable\n// }"]},"metadata":{},"sourceType":"module"}